//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Barshop.ServiceEmpresa {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proveedor", Namespace="http://schemas.datacontract.org/2004/07/WcfServicio_Empresa")]
    [System.SerializableAttribute()]
    public partial class Proveedor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string direccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rucField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string direccion {
            get {
                return this.direccionField;
            }
            set {
                if ((object.ReferenceEquals(this.direccionField, value) != true)) {
                    this.direccionField = value;
                    this.RaisePropertyChanged("direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ruc {
            get {
                return this.rucField;
            }
            set {
                if ((object.ReferenceEquals(this.rucField, value) != true)) {
                    this.rucField = value;
                    this.RaisePropertyChanged("ruc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceEmpresa.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/proveedores", ReplyAction="http://tempuri.org/IService1/proveedoresResponse")]
        Barshop.ServiceEmpresa.Proveedor[] proveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/proveedores", ReplyAction="http://tempuri.org/IService1/proveedoresResponse")]
        System.Threading.Tasks.Task<Barshop.ServiceEmpresa.Proveedor[]> proveedoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Agregar", ReplyAction="http://tempuri.org/IService1/AgregarResponse")]
        string Agregar(Barshop.ServiceEmpresa.Proveedor reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Agregar", ReplyAction="http://tempuri.org/IService1/AgregarResponse")]
        System.Threading.Tasks.Task<string> AgregarAsync(Barshop.ServiceEmpresa.Proveedor reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Actualizar", ReplyAction="http://tempuri.org/IService1/ActualizarResponse")]
        string Actualizar(Barshop.ServiceEmpresa.Proveedor reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Actualizar", ReplyAction="http://tempuri.org/IService1/ActualizarResponse")]
        System.Threading.Tasks.Task<string> ActualizarAsync(Barshop.ServiceEmpresa.Proveedor reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Eliminar", ReplyAction="http://tempuri.org/IService1/EliminarResponse")]
        string Eliminar(Barshop.ServiceEmpresa.Proveedor reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Eliminar", ReplyAction="http://tempuri.org/IService1/EliminarResponse")]
        System.Threading.Tasks.Task<string> EliminarAsync(Barshop.ServiceEmpresa.Proveedor reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Buscar", ReplyAction="http://tempuri.org/IService1/BuscarResponse")]
        Barshop.ServiceEmpresa.Proveedor Buscar(string idempresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Buscar", ReplyAction="http://tempuri.org/IService1/BuscarResponse")]
        System.Threading.Tasks.Task<Barshop.ServiceEmpresa.Proveedor> BuscarAsync(string idempresa);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Barshop.ServiceEmpresa.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Barshop.ServiceEmpresa.IService1>, Barshop.ServiceEmpresa.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Barshop.ServiceEmpresa.Proveedor[] proveedores() {
            return base.Channel.proveedores();
        }
        
        public System.Threading.Tasks.Task<Barshop.ServiceEmpresa.Proveedor[]> proveedoresAsync() {
            return base.Channel.proveedoresAsync();
        }
        
        public string Agregar(Barshop.ServiceEmpresa.Proveedor reg) {
            return base.Channel.Agregar(reg);
        }
        
        public System.Threading.Tasks.Task<string> AgregarAsync(Barshop.ServiceEmpresa.Proveedor reg) {
            return base.Channel.AgregarAsync(reg);
        }
        
        public string Actualizar(Barshop.ServiceEmpresa.Proveedor reg) {
            return base.Channel.Actualizar(reg);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarAsync(Barshop.ServiceEmpresa.Proveedor reg) {
            return base.Channel.ActualizarAsync(reg);
        }
        
        public string Eliminar(Barshop.ServiceEmpresa.Proveedor reg) {
            return base.Channel.Eliminar(reg);
        }
        
        public System.Threading.Tasks.Task<string> EliminarAsync(Barshop.ServiceEmpresa.Proveedor reg) {
            return base.Channel.EliminarAsync(reg);
        }
        
        public Barshop.ServiceEmpresa.Proveedor Buscar(string idempresa) {
            return base.Channel.Buscar(idempresa);
        }
        
        public System.Threading.Tasks.Task<Barshop.ServiceEmpresa.Proveedor> BuscarAsync(string idempresa) {
            return base.Channel.BuscarAsync(idempresa);
        }
    }
}
